{
	// Place your snippets for java here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"main": {
		"prefix": "main",
		"body": [
			"public static void main(String[] args) {",
				"\t$1",
			"}"
		]
	},
	"out": {
		"prefix": "out",
		"body": [
			"System.out.println($1);"
		]
	},
	"BigInteger": {
		"prefix": "bigint",
		"body": [
			"BigInteger"
		]
	},
	"mockMvc test": {
		"prefix": "mmtest",
		"body": [
			"@Test",
			"public void test_$1_expect$2() throws Exception {"
				"\tmockMvc.perform(",
					"\t\t$3(\"/$4\")",
						"\t\t\t.contentType(MediaType.APPLICATION_JSON_UTF8)",
				"\t)",
					"\t\t.andExpect(status().$5());",
			"}"
		]
	},
	"mockMvc test with content": {
		"prefix": "mmcont",
		"body": [
			"@Test",
			"public void test_$1_expect$2() throws Exception {",
				"\tmockMvc.perform(",
					"\t\t$3(\"/$4\")",
						"\t\t\t.contentType(MediaType.APPLICATION_JSON_UTF8)",
						"\t\t\t.content(TestData.$5)",
				"\t)",
					"\t\t.andExpect(status().$6());",
			"}"
		]
	},
	"public static final": {
		"prefix": "psf",
		"body": "public static final "
	},
	"public void": {
		"prefix": "pv",
		"body": "public void "
	}
}